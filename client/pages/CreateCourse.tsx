import { useState } from "react";
import { Link, useNavigate } from "react-router-dom";

type Step = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;

interface FormData {
  learningGoal: string;
  motivation: string;
  experienceLevel: string;
  language: string;
  teachingStyle: string;
  learningPreference: string[];
  timeCommitment: string;
  targetDate: string;
  addOns: {
    autoGeneratedVideos: boolean;
    aiTutor: boolean;
    practiceQuizzes: boolean;
    completionCertificate: boolean;
    referenceMaterials: boolean;
  };
}

export default function CreateCourse() {
  const navigate = useNavigate();
  const [currentStep, setCurrentStep] = useState<Step>(1);
  const [isSidebarOpen, setIsSidebarOpen] = useState(false);
  const [formData, setFormData] = useState<FormData>({
    learningGoal: "",
    motivation: "",
    experienceLevel: "",
    language: "",
    teachingStyle: "",
    learningPreference: [],
    timeCommitment: "",
    targetDate: "",
    addOns: {
      autoGeneratedVideos: true,
      aiTutor: true,
      practiceQuizzes: true,
      completionCertificate: false,
      referenceMaterials: false,
    },
  });

  const totalSteps = 8;
  const progressPercentage = Math.round((currentStep / totalSteps) * 100);

  const suggestedGoals = [
    "Python for Data Science",
    "Spanish for Travel",
    "Excel Advanced",
    "Digital Marketing",
    "Machine Learning",
    "React Development",
    "Photography Basics",
    "Financial Planning",
    "Graphic Design",
  ];

  const handleNext = () => {
    if (currentStep < totalSteps) {
      setCurrentStep((prev) => (prev + 1) as Step);
    } else {
      navigate("/my-courses");
    }
  };

  const handleBack = () => {
    if (currentStep > 1) {
      setCurrentStep((prev) => (prev - 1) as Step);
    }
  };

  const toggleLearningPreference = (pref: string) => {
    setFormData((prev) => ({
      ...prev,
      learningPreference: prev.learningPreference.includes(pref)
        ? prev.learningPreference.filter((p) => p !== pref)
        : [...prev.learningPreference, pref],
    }));
  };

  const renderStepContent = () => {
    switch (currentStep) {
      case 1:
        return (
          <div className="flex flex-col gap-7">
            <div className="flex flex-col gap-1.5">
              <h2 className="text-white text-[22px] font-bold leading-6 tracking-tight">
                What do you want to learn?
              </h2>
              <p className="text-[#6B7280] text-sm leading-5">
                Tell us your learning goal and motivation
              </p>
            </div>

            <div className="flex flex-col gap-3">
              <div className="flex flex-col gap-2">
                <label className="text-white text-sm font-medium leading-[14px]">
                  Learning Goal
                </label>
                <input
                  type="text"
                  placeholder="e.g., Python for Data Analysis, Spanish for travel..."
                  value={formData.learningGoal}
                  onChange={(e) =>
                    setFormData({ ...formData, learningGoal: e.target.value })
                  }
                  className="w-full px-3 py-3 rounded-[10px] border border-[#E5E7EB] bg-white text-sm text-[#6B7280] placeholder:text-[#6B7280] focus:outline-none focus:ring-2 focus:ring-[#7C3BED]"
                />
              </div>

              <div className="flex flex-wrap gap-2">
                {suggestedGoals.map((goal) => (
                  <button
                    key={goal}
                    type="button"
                    onClick={() => setFormData({ ...formData, learningGoal: goal })}
                    className="px-3 py-1 rounded-full border border-[#E5E7EB] text-white text-xs font-semibold leading-4 hover:bg-[#33363E] transition-colors"
                  >
                    {goal}
                  </button>
                ))}
              </div>
            </div>
          </div>
        );

      case 2:
        return (
          <div className="flex flex-col gap-7">
            <div className="flex flex-col gap-1.5">
              <h2 className="text-white text-[22px] font-bold leading-6 tracking-tight">
                Why do you want to learn this?
              </h2>
              <p className="text-[#6B7280] text-sm leading-5">
                This helps us personalize your learning path
              </p>
            </div>

            <div className="flex flex-col gap-3">
              <div className="flex gap-4">
                <button
                  type="button"
                  onClick={() =>
                    setFormData({ ...formData, motivation: "career" })
                  }
                  className={`flex-1 flex items-center gap-3 p-4 rounded-xl border ${
                    formData.motivation === "career"
                      ? "border-[#0AEFC9] bg-[#CFC6FD]"
                      : "border-[#454953] bg-[#222328]"
                  } transition-colors`}
                >
                  <svg
                    width="20"
                    height="21"
                    viewBox="0 0 20 21"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M9.99984 18.8334C14.6022 18.8334 18.3332 15.1025 18.3332 10.5001C18.3332 5.89771 14.6022 2.16675 9.99984 2.16675C5.39746 2.16675 1.6665 5.89771 1.6665 10.5001C1.6665 15.1025 5.39746 18.8334 9.99984 18.8334Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M10 15.5C12.7614 15.5 15 13.2614 15 10.5C15 7.73858 12.7614 5.5 10 5.5C7.23858 5.5 5 7.73858 5 10.5C5 13.2614 7.23858 15.5 10 15.5Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M10.0002 12.1666C10.9206 12.1666 11.6668 11.4204 11.6668 10.4999C11.6668 9.57944 10.9206 8.83325 10.0002 8.83325C9.07969 8.83325 8.3335 9.57944 8.3335 10.4999C8.3335 11.4204 9.07969 12.1666 10.0002 12.1666Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                  <span
                    className={`text-base font-medium leading-6 ${
                      formData.motivation === "career" ? "text-[#6346FA]" : "text-white"
                    }`}
                  >
                    Career growth
                  </span>
                </button>

                <button
                  type="button"
                  onClick={() => setFormData({ ...formData, motivation: "exam" })}
                  className={`flex-1 flex items-center gap-3 p-4 rounded-xl border ${
                    formData.motivation === "exam"
                      ? "border-[#0AEFC9] bg-[#CFC6FD]"
                      : "border-[#454953] bg-[#222328]"
                  } transition-colors`}
                >
                  <svg
                    width="20"
                    height="21"
                    viewBox="0 0 20 21"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10 6.33325V17.9999"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M2.49984 15.5C2.27882 15.5 2.06686 15.4122 1.91058 15.2559C1.7543 15.0996 1.6665 14.8877 1.6665 14.6667V3.83333C1.6665 3.61232 1.7543 3.40036 1.91058 3.24408C2.06686 3.0878 2.27882 3 2.49984 3H6.6665C7.55056 3 8.39841 3.35119 9.02353 3.97631C9.64865 4.60143 9.99984 5.44928 9.99984 6.33333C9.99984 5.44928 10.351 4.60143 10.9761 3.97631C11.6013 3.35119 12.4491 3 13.3332 3H17.4998C17.7209 3 17.9328 3.0878 18.0891 3.24408C18.2454 3.40036 18.3332 3.61232 18.3332 3.83333V14.6667C18.3332 14.8877 18.2454 15.0996 18.0891 15.2559C17.9328 15.4122 17.7209 15.5 17.4998 15.5H12.4998C11.8368 15.5 11.2009 15.7634 10.7321 16.2322C10.2632 16.7011 9.99984 17.337 9.99984 18C9.99984 17.337 9.73645 16.7011 9.2676 16.2322C8.79876 15.7634 8.16288 15.5 7.49984 15.5H2.49984Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                  <span className="text-white text-base font-medium leading-6">
                    Exam preparation
                  </span>
                </button>
              </div>

              <div className="flex gap-4">
                <button
                  type="button"
                  onClick={() =>
                    setFormData({ ...formData, motivation: "school" })
                  }
                  className={`flex-1 flex items-center gap-3 p-4 rounded-xl border ${
                    formData.motivation === "school"
                      ? "border-[#0AEFC9] bg-[#CFC6FD]"
                      : "border-[#454953] bg-[#222328]"
                  } transition-colors`}
                >
                  <svg
                    width="20"
                    height="21"
                    viewBox="0 0 20 21"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M13.3332 18V16.3333C13.3332 15.4493 12.982 14.6014 12.3569 13.9763C11.7317 13.3512 10.8839 13 9.99984 13H4.99984C4.11578 13 3.26794 13.3512 2.64281 13.9763C2.01769 14.6014 1.6665 15.4493 1.6665 16.3333V18"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M7.49984 9.66667C9.34079 9.66667 10.8332 8.17428 10.8332 6.33333C10.8332 4.49238 9.34079 3 7.49984 3C5.65889 3 4.1665 4.49238 4.1665 6.33333C4.1665 8.17428 5.65889 9.66667 7.49984 9.66667Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M18.3335 18.0001V16.3334C18.3329 15.5948 18.0871 14.8774 17.6346 14.2937C17.1821 13.7099 16.5486 13.293 15.8335 13.1084"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M13.3335 3.1084C14.0505 3.29198 14.686 3.70898 15.1399 4.29366C15.5937 4.87833 15.84 5.59742 15.84 6.33757C15.84 7.07771 15.5937 7.7968 15.1399 8.38147C14.686 8.96615 14.0505 9.38315 13.3335 9.56673"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                  <span className="text-white text-[15px] font-medium leading-6">
                    School/academic work
                  </span>
                </button>

               <button
  type="button"
  onClick={() =>
    setFormData({ ...formData, motivation: "hobby" })
  }
  className={`flex-1 flex items-center gap-3 p-4 rounded-xl border ${
    formData.motivation === "hobby"
      ? "border-[#0AEFC9] bg-[#CFC6FD]"
      : "border-[#454953] bg-[#222328]"
  } transition-colors`}
>
  <div className="flex-shrink-0 w-5 h-5 flex items-center justify-center">
    <svg
      width="20"
      height="21"
      viewBox="0 0 20 21"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-full h-full"
    >
      <path
        d="M10 4.66655C10.001 4.33324 9.93532 4.0031 9.80685 3.69555C9.67837 3.38799 9.4897 3.10923 9.25191 2.87567C9.01413 2.6421 8.73204 2.45844 8.42224 2.33549C8.11243 2.21254 7.78117 2.15278 7.44793 2.15972C7.1147 2.16667 6.78621 2.24018 6.4818 2.37593C6.17739 2.51169 5.9032 2.70694 5.67536 2.95022C5.44751 3.19349 5.27061 3.47987 5.15506 3.79251C5.03952 4.10515 4.98765 4.43774 5.00252 4.77071C4.51269 4.89666 4.05794 5.13242 3.67271 5.46014C3.28749 5.78786 2.98189 6.19894 2.77906 6.66225C2.57623 7.12556 2.48149 7.62896 2.50201 8.13431C2.52254 8.63965 2.65779 9.13371 2.89752 9.57905C2.476 9.92149 2.14454 10.3617 1.93197 10.8615C1.7194 11.3612 1.63215 11.9054 1.67782 12.4465C1.7235 12.9877 1.9007 13.5095 2.19403 13.9666C2.48735 14.4236 2.88791 14.8021 3.36085 15.069C3.30245 15.5209 3.3373 15.9799 3.46326 16.4178C3.58922 16.8557 3.8036 17.2631 4.09318 17.6148C4.38275 17.9666 4.74136 18.2553 5.14687 18.463C5.55238 18.6708 5.99617 18.7932 6.45083 18.8227C6.9055 18.8522 7.36139 18.7881 7.79034 18.6346C8.2193 18.481 8.61221 18.2411 8.94482 17.9297C9.27743 17.6183 9.54267 17.242 9.72416 16.8241C9.90565 16.4062 9.99953 15.9555 10 15.4999V4.66655Z"
        stroke="#7C3BED"
        strokeWidth="1.66667"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  </div>

  <span className="text-white text-[14px] sm:text-[15px] font-medium leading-5 text-left break-words w-full">
    Personal hobby / interest
  </span>
</button>
</div>

              <button
                type="button"
                onClick={() => setFormData({ ...formData, motivation: "other" })}
                className={`flex items-center gap-3 p-4 rounded-xl border ${
                  formData.motivation === "other"
                    ? "border-[#0AEFC9] bg-[#CFC6FD]"
                    : "border-[#33363E] bg-[#222328]"
                } transition-colors`}
              >
                <svg
                  width="20"
                  height="21"
                  viewBox="0 0 20 21"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M6.58317 17.1666C8.17365 17.9825 10.0032 18.2035 11.7422 17.7898C13.4812 17.376 15.0153 16.3548 16.068 14.9101C17.1206 13.4654 17.6227 11.6922 17.4837 9.91009C17.3446 8.12797 16.5737 6.4541 15.3097 5.19012C14.0457 3.92614 12.3718 3.15517 10.5897 3.01614C8.80758 2.87711 7.0344 3.37916 5.58969 4.43183C4.14498 5.4845 3.12375 7.01855 2.71002 8.75755C2.2963 10.4966 2.51729 12.3261 3.33317 13.9166L1.6665 18.8333L6.58317 17.1666Z"
                    stroke="#7C3BED"
                    strokeWidth="1.66667"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </svg>
                <span className="text-white text-base font-medium leading-6">Other</span>
              </button>
            </div>
          </div>
        );

      case 3:
  return (
    <div className="flex flex-col gap-7">
      <div className="flex flex-col gap-1.5">
        <h2 className="text-white text-[22px] font-bold leading-6 tracking-tight">
          What's your current experience with this topic?
        </h2>
        <p className="text-[#6B7280] text-sm leading-5">
          This helps us set the right complexity level
        </p>
      </div>

      <div className="flex flex-col gap-4">
        {[
          {
            key: "beginner",
            title: "Beginner",
            desc: "Perfect for complete beginners. We'll start with the basics and build up gradually.",
          },
          {
            key: "intermediate",
            title: "Intermediate",
            desc: "Great! We'll skip the fundamentals and focus on intermediate concepts.",
          },
          {
            key: "advanced",
            title: "Advanced",
            desc: "Excellent! We'll dive into advanced topics and expert-level techniques.",
          },
        ].map((level) => {
          const isActive = formData.experienceLevel === level.key;
          return (
            <button
              key={level.key}
              type="button"
              onClick={() =>
                setFormData({ ...formData, experienceLevel: level.key })
              }
              className={`flex items-center justify-between p-6 rounded-2xl border-[1.5px] ${
                isActive
                  ? "border-[#0AEFC9] bg-[#222328]"
                  : "border-[#33363E] bg-[#222328]"
              } transition-all duration-200 hover:border-[#0AEFC9]/70`}
            >
              <div className="flex items-start gap-3 pr-2 text-left">
                {/* Keep your SVG icons here */}
                <div className="flex flex-col items-start gap-1.5">
                  <h3 className="text-white text-[20px] sm:text-[22px] font-bold leading-6 tracking-tight">
                    {level.title}
                  </h3>
                  <p className="text-[#6B7280] text-sm leading-5">{level.desc}</p>
                </div>
              </div>

              {/* Checkbox (consistent size, fixed spacing, no jump) */}
              <div
                className={`flex items-center justify-center w-[22px] h-[22px] sm:w-[20px] sm:h-[20px] rounded border-[1.5px] shrink-0 ml-2 ${
                  isActive
                    ? "border-[#0AEFC9] bg-[#0AEFC9]"
                    : "border-[#0AEFC9] bg-transparent"
                }`}
              >
                {isActive && (
                  <svg
                    width="14"
                    height="14"
                    viewBox="0 0 12 13"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                    className="pointer-events-none"
                  >
                    <path
                      d="M10 3.75L4.5 9.25L2 6.75"
                      stroke="white"
                      strokeWidth="1.4"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                )}
              </div>
            </button>
          );
        })}
      </div>
    </div>
  );


      case 4:
  return (
    <div className="flex flex-col gap-7 max-h-[85vh] overflow-y-auto px-2 sm:px-4 pb-6 scroll-smooth">
      <div className="flex flex-col gap-1.5">
        <h2 className="text-white text-[22px] sm:text-[24px] font-bold leading-6 tracking-tight">
          Language & Teaching Style
        </h2>
        <p className="text-[#6B7280] text-sm sm:text-base leading-5">
          Choose your preferred language and tutor personality
        </p>
      </div>

      {/* Language input */}
      <div className="flex flex-col gap-2">
        <label className="text-white text-sm sm:text-base font-medium">
          Select Language
        </label>
        <div className="relative">
          <input
            type="text"
            placeholder="Language"
            value={formData.language || ""}
            onChange={(e) =>
              setFormData({ ...formData, language: e.target.value })
            }
            className="w-full h-[50px] px-4 rounded-xl border border-[#DBDBDC] bg-white text-base text-[#AAAAAD] placeholder:text-[#AAAAAD] focus:outline-none focus:ring-2 focus:ring-[#7C3BED]"
          />
          <svg
            className="absolute right-4 top-1/2 -translate-y-1/2 pointer-events-none"
            width="20"
            height="21"
            viewBox="0 0 20 21"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M5 8.25L10 13.25L15 8.25"
              stroke="#999999"
              strokeWidth="1.4"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          </svg>
        </div>
      </div>

      {/* Teaching style options */}
      <div className="flex flex-col gap-4">
        {[
          {
            key: "casual",
            title: "Casual & Friendly",
            lines: [
              "Relaxed, conversational, and encouraging.",
              `"Hey! Let's dive into this topic together. Don't worry if it seems tricky at first!"`,
            ],
          },
          {
            key: "professional",
            title: "Professional & Academic",
            lines: [
              "Formal, structured, and comprehensive.",
              `"Today we will examine the fundamental principles underlying this concept."`,
            ],
          },
          {
            key: "exam",
            title: "Exam-Focused",
            lines: [
              "Direct, test-oriented, and results-driven.",
              `"This is a key exam topic. Remember this formula - it appears frequently in tests."`,
            ],
          },
          {
            key: "storytelling",
            title: "Storytelling & Analogies",
            lines: [
              "Creative explanations with real-world examples.",
              `"Think of this concept like a recipe - each ingredient plays a specific role..."`,
            ],
          },
        ].map((style) => {
          const isActive = formData.teachingStyle === style.key;
          return (
            <button
              key={style.key}
              type="button"
              onClick={() =>
                setFormData({ ...formData, teachingStyle: style.key })
              }
              className={`flex items-start justify-between w-full p-5 sm:p-6 rounded-2xl border-[1.5px] ${
                isActive
                  ? "border-[#0AEFC9] bg-[#222328]"
                  : "border-[#33363E] bg-[#222328]"
              } transition-all duration-200 hover:border-[#0AEFC9]/70`}
            >
              <div className="flex flex-col items-start gap-1 text-left flex-1 pr-3">
                <h3 className="text-white text-[18px] sm:text-[22px] font-semibold sm:font-bold leading-snug break-words">
                  {style.title}
                </h3>
                {style.lines.map((l, i) => (
                  <p
                    key={i}
                    className="text-[#B6B8C0] text-xs sm:text-sm leading-5 break-words"
                  >
                    {l}
                  </p>
                ))}
              </div>

              {/* Checkbox — consistent size & spacing */}
              <div
                className={`flex items-center justify-center w-[22px] h-[22px] sm:w-[20px] sm:h-[20px] rounded border-[1.5px] shrink-0 ml-3 ${
                  isActive
                    ? "border-[#0AEFC9] bg-[#0AEFC9]"
                    : "border-[#0AEFC9] bg-transparent"
                }`}
              >
                {isActive && (
                  <svg
                    width="14"
                    height="14"
                    viewBox="0 0 12 13"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10 3.75L4.5 9.25L2 6.75"
                      stroke="white"
                      strokeWidth="1.4"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                )}
              </div>
            </button>
          );
        })}
      </div>
    </div>
  );


      case 5:
        return (
          <div className="flex flex-col gap-7">
            <div className="flex flex-col gap-1.5">
              <h2 className="text-white text-[22px] font-bold leading-6 tracking-tight">
                How do you prefer to learn?
              </h2>
              <p className="text-[#6B7280] text-sm leading-5">
                Select all that apply - we'll customize your experience
              </p>
            </div>

            <div className="flex flex-col gap-4">
              <div className="grid grid-cols-2 gap-6">
                <button
                  type="button"
                  onClick={() => toggleLearningPreference("video-heavy")}
                  className={`flex flex-col items-start gap-3 p-4 rounded-xl border ${
                    formData.learningPreference.includes("video-heavy")
                      ? "border-[#0AEFC9] bg-[#222328]"
                      : "border-[#33363E] bg-[#222328]"
                  } transition-colors`}
                >
                  <svg
                    width="20"
                    height="21"
                    viewBox="0 0 20 21"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M13.3333 11.3934L17.6858 14.2951C17.7486 14.3369 17.8215 14.3608 17.8968 14.3644C17.972 14.368 18.0469 14.3511 18.1133 14.3156C18.1798 14.28 18.2353 14.2271 18.2741 14.1624C18.3128 14.0978 18.3333 14.0238 18.3333 13.9484V7.11845C18.3334 7.04514 18.314 6.97311 18.2773 6.90966C18.2406 6.8462 18.1878 6.79355 18.1242 6.75703C18.0607 6.72051 17.9886 6.70141 17.9153 6.70166C17.8419 6.70191 17.77 6.7215 17.7067 6.75845L13.3333 9.31012"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M11.6667 5.56006H3.33332C2.41285 5.56006 1.66666 6.30625 1.66666 7.22673V13.8934C1.66666 14.8139 2.41285 15.5601 3.33332 15.5601H11.6667C12.5871 15.5601 13.3333 14.8139 13.3333 13.8934V7.22673C13.3333 6.30625 12.5871 5.56006 11.6667 5.56006Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                  <div className="flex flex-col items-start gap-1">
                    <h3 className="text-white text-[15px] font-medium leading-6">
                      Video-heavy with visuals
                    </h3>
                    <p className="text-[#B6B8C0] text-sm leading-5">
                      Rich video content with diagrams and animations
                    </p>
                  </div>
                </button>

                <button
                  type="button"
                  onClick={() => toggleLearningPreference("mixed")}
                  className={`flex flex-col items-start gap-3 p-4 rounded-xl border ${
                    formData.learningPreference.includes("mixed")
                      ? "border-[#0AEFC9] bg-[#222328]"
                      : "border-[#33363E] bg-[#222328]"
                  } transition-colors`}
                >
                  <svg
                    width="20"
                    height="21"
                    viewBox="0 0 20 21"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10 6.39331V18.06"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M2.5 15.5601C2.27899 15.5601 2.06703 15.4723 1.91075 15.316C1.75447 15.1597 1.66667 14.9477 1.66667 14.7267V3.89339C1.66667 3.67238 1.75447 3.46042 1.91075 3.30414C2.06703 3.14786 2.27899 3.06006 2.5 3.06006H6.66667C7.55072 3.06006 8.39857 3.41125 9.02369 4.03637C9.64881 4.66149 10 5.50934 10 6.39339C10 5.50934 10.3512 4.66149 10.9763 4.03637C11.6014 3.41125 12.4493 3.06006 13.3333 3.06006H17.5C17.721 3.06006 17.933 3.14786 18.0893 3.30414C18.2455 3.46042 18.3333 3.67238 18.3333 3.89339V14.7267C18.3333 14.9477 18.2455 15.1597 18.0893 15.316C17.933 15.4723 17.721 15.5601 17.5 15.5601H12.5C11.837 15.5601 11.2011 15.8235 10.7322 16.2923C10.2634 16.7611 10 17.397 10 18.0601C10 17.397 9.73661 16.7611 9.26777 16.2923C8.79893 15.8235 8.16304 15.5601 7.5 15.5601H2.5Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                  <div className="flex flex-col items-start gap-1">
                    <h3 className="text-white text-[15px] font-medium leading-6">
                      Mixed (videos + text summaries)
                    </h3>
                    <p className="text-[#B6B8C0] text-sm leading-5">
                      Balanced approach with multiple content types
                    </p>
                  </div>
                </button>

                <button
                  type="button"
                  onClick={() => toggleLearningPreference("quizzes")}
                  className={`flex flex-col items-start gap-3 p-4 rounded-xl border ${
                    formData.learningPreference.includes("quizzes")
                      ? "border-[#0AEFC9] bg-[#222328]"
                      : "border-[#33363E] bg-[#222328]"
                  } transition-colors`}
                >
                  <svg
                    width="20"
                    height="21"
                    viewBox="0 0 20 21"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M9.99999 18.6435C14.6024 18.6435 18.3333 14.9125 18.3333 10.3101C18.3333 5.70777 14.6024 1.97681 9.99999 1.97681C5.39762 1.97681 1.66666 5.70777 1.66666 10.3101C1.66666 14.9125 5.39762 18.6435 9.99999 18.6435Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M10 15.3101C12.7614 15.3101 15 13.0715 15 10.3101C15 7.54863 12.7614 5.31006 10 5.31006C7.23858 5.31006 5 7.54863 5 10.3101C5 13.0715 7.23858 15.3101 10 15.3101Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M10 11.9766C10.9205 11.9766 11.6667 11.2305 11.6667 10.31C11.6667 9.3895 10.9205 8.64331 10 8.64331C9.07954 8.64331 8.33334 9.3895 8.33334 10.31C8.33334 11.2305 9.07954 11.9766 10 11.9766Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                  <div className="flex flex-col items-start gap-1">
                    <h3 className="text-white text-[16px] font-medium leading-6">
                      Quizzes & practice-heavy
                    </h3>
                    <p className="text-[#B6B8C0] text-sm leading-5">
                      Learn by doing with lots of exercises
                    </p>
                  </div>
                </button>

                <button
                  type="button"
                  onClick={() => toggleLearningPreference("bite-sized")}
                  className={`flex flex-col items-start gap-3 p-4 rounded-xl border ${
                    formData.learningPreference.includes("bite-sized")
                      ? "border-[#0AEFC9] bg-[#222328]"
                      : "border-[#33363E] bg-[#222328]"
                  } transition-colors`}
                >
                  <svg
                    width="20"
                    height="21"
                    viewBox="0 0 20 21"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10 18.6435C14.6024 18.6435 18.3333 14.9125 18.3333 10.3101C18.3333 5.70777 14.6024 1.97681 10 1.97681C5.39763 1.97681 1.66667 5.70777 1.66667 10.3101C1.66667 14.9125 5.39763 18.6435 10 18.6435Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M10 5.31006V10.3101L13.3333 11.9767"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                  <div className="flex flex-col items-start gap-1">
                    <h3 className="text-white text-[15px] font-medium leading-6">
                      Short bite-sized lessons
                    </h3>
                    <p className="text-[#B6B8C0] text-sm leading-5">
                      Quick 5-15 minute focused sessions
                    </p>
                  </div>
                </button>
              </div>

              <div className="flex items-center gap-3 p-4 rounded-xl bg-[#EFEDFF]">
                <div
                  className={`flex items-center justify-center w-4 h-4 rounded border-2 ${
                    formData.addOns.aiTutor
                      ? "border-[#7C3BED] bg-[#7C3BED]"
                      : "border-[#7C3BED]"
                  }`}
                >
                  {formData.addOns.aiTutor && (
                    <svg
                      width="16"
                      height="17"
                      viewBox="0 0 16 17"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M12.9117 4.94263L6.15126 11.703L3.07834 8.63013"
                        stroke="white"
                        strokeWidth="1.22917"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  )}
                </div>
                <div className="flex-1 flex flex-col gap-1">
                  <h4 className="text-[#030711] text-sm font-medium">
                    Add interactive AI Tutor to answer my questions while I learn
                  </h4>
                  <p className="text-[#6B7280] text-sm">
                    Get instant answers and explanations during your lessons (Recommended)
                  </p>
                </div>
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 25 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M12.765 5.00295C12.7662 4.60314 12.6874 4.20714 12.5333 3.83823C12.3792 3.46932 12.1529 3.13495 11.8677 2.85479C11.5825 2.57462 11.2441 2.35432 10.8725 2.20684C10.5009 2.05936 10.1035 1.98768 9.70381 1.99601C9.3041 2.00434 8.91008 2.09252 8.54494 2.25536C8.1798 2.4182 7.85091 2.6524 7.57761 2.94421C7.30431 3.23601 7.09212 3.57953 6.95352 3.95454C6.81492 4.32955 6.7527 4.72849 6.77054 5.1279C6.18299 5.27897 5.63751 5.56176 5.17544 5.95486C4.71336 6.34796 4.34679 6.84105 4.1035 7.3968C3.8602 7.95254 3.74656 8.55636 3.77118 9.16253C3.7958 9.76869 3.95803 10.3613 4.24559 10.8955C3.73998 11.3063 3.3424 11.8343 3.08741 12.4338C2.83243 13.0332 2.72778 13.6859 2.78257 14.335C2.83735 14.9842 3.04991 15.6101 3.40175 16.1583C3.75359 16.7066 4.23406 17.1605 4.80136 17.4807C4.73131 18.0228 4.77311 18.5734 4.9242 19.0986C5.07528 19.6238 5.33244 20.1125 5.67978 20.5344C6.02712 20.9564 6.45728 21.3026 6.94369 21.5518C7.43009 21.801 7.96242 21.9478 8.50779 21.9832C9.05316 22.0186 9.6 21.9418 10.1145 21.7576C10.6291 21.5733 11.1004 21.2856 11.4993 20.9121C11.8983 20.5386 12.2164 20.0872 12.4341 19.5859C12.6518 19.0846 12.7645 18.544 12.765 17.9975V5.00295Z"
                    stroke="#7C3BED"
                    strokeWidth="1.99917"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                  <path
                    d="M12.765 5.00295C12.7638 4.60314 12.8426 4.20714 12.9967 3.83823C13.1508 3.46932 13.3771 3.13495 13.6624 2.85479C13.9476 2.57462 14.2859 2.35432 14.6576 2.20684C15.0292 2.05936 15.4265 1.98768 15.8262 1.99601C16.2259 2.00434 16.62 2.09252 16.9851 2.25536C17.3502 2.4182 17.6791 2.6524 17.9524 2.94421C18.2257 3.23601 18.4379 3.57953 18.5765 3.95454C18.7151 4.32955 18.7773 4.72849 18.7595 5.1279C19.3471 5.27897 19.8925 5.56176 20.3546 5.95486C20.8167 6.34796 21.1832 6.84105 21.4265 7.3968C21.6698 7.95254 21.7835 8.55636 21.7589 9.16253C21.7342 9.76869 21.572 10.3613 21.2844 10.8955C21.7901 11.3063 22.1876 11.8343 22.4426 12.4338C22.6976 13.0332 22.8023 13.6859 22.7475 14.335C22.6927 14.9842 22.4801 15.6101 22.1283 16.1583C21.7764 16.7066 21.296 17.1605 20.7287 17.4807C20.7987 18.0228 20.7569 18.5734 20.6058 19.0986C20.4548 19.6238 20.1976 20.1125 19.8503 20.5344C19.5029 20.9564 19.0728 21.3026 18.5864 21.5518C18.0999 21.801 17.5676 21.9478 17.0222 21.9832C16.4769 22.0186 15.93 21.9418 15.4155 21.7576C14.901 21.5733 14.4297 21.2856 14.0307 20.9121C13.6317 20.5386 13.3136 20.0872 13.0959 19.5859C12.8782 19.0846 12.7656 18.544 12.765 17.9975V5.00295Z"
                    stroke="#7C3BED"
                    strokeWidth="1.99917"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                  <path
                    d="M15.7638 12.9998C14.9246 12.7046 14.1918 12.1671 13.658 11.4554C13.1242 10.7438 12.8135 9.88976 12.765 9.00146C12.7166 9.88976 12.4059 10.7438 11.8721 11.4554C11.3383 12.1671 10.6055 12.7046 9.7663 12.9998"
                    stroke="#7C3BED"
                    strokeWidth="1.99917"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                  <path
                    d="M18.3617 6.50293C18.6037 6.08351 18.7406 5.61175 18.7607 5.12793"
                    stroke="#7C3BED"
                    strokeWidth="1.99917"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                  <path
                    d="M6.77051 5.12793C6.79028 5.61166 6.92684 6.08343 7.16851 6.50293"
                    stroke="#7C3BED"
                    strokeWidth="1.99917"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                  <path
                    d="M4.24557 10.8967C4.42851 10.7477 4.62428 10.6152 4.83057 10.5007"
                    stroke="#7C3BED"
                    strokeWidth="1.99917"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                  <path
                    d="M20.6997 10.5007C20.906 10.6152 21.1018 10.7477 21.2847 10.8967"
                    stroke="#7C3BED"
                    strokeWidth="1.99917"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                  <path
                    d="M6.7683 17.9979C6.07913 17.9983 5.40157 17.8205 4.8013 17.4819"
                    stroke="#7C3BED"
                    strokeWidth="1.99917"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                  <path
                    d="M20.7295 17.4819C20.1293 17.8205 19.4517 17.9983 18.7625 17.9979"
                    stroke="#7C3BED"
                    strokeWidth="1.99917"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </svg>
              </div>
            </div>
          </div>
        );

      case 6:
        return (
          <div className="flex flex-col gap-7">
            <div className="flex flex-col gap-1.5">
              <h2 className="text-white text-[22px] font-bold leading-6 tracking-tight">
                How much time can you dedicate?
              </h2>
              <p className="text-[#6B7280] text-sm leading-5">
                We'll create a pacing plan that fits your schedule
              </p>
            </div>

            <div className="flex flex-col gap-2">
              <label className="text-[#6B7280] text-sm">Daily time commitment</label>
              <div className="grid grid-cols-2 gap-6">
                <button
                  type="button"
                  onClick={() => setFormData({ ...formData, timeCommitment: "15m" })}
                  className={`flex flex-col items-center justify-center p-4 rounded-xl border ${
                    formData.timeCommitment === "15m"
                      ? "border-[#0AEFC9] bg-[#222328]"
                      : "border-[#33363E] bg-[#222328]"
                  } transition-colors`}
                >
                  <h3 className="text-white text-2xl font-medium">15m</h3>
                  <p className="text-[#B6B8C0] text-sm font-bold">Light</p>
                  <p className="text-[#B6B8C0] text-sm text-center">Perfect for busy schedules</p>
                </button>

                <button
                  type="button"
                  onClick={() => setFormData({ ...formData, timeCommitment: "30m" })}
                  className={`flex flex-col items-center justify-center p-4 rounded-xl border ${
                    formData.timeCommitment === "30m"
                      ? "border-[#0AEFC9] bg-[#222328]"
                      : "border-[#33363E] bg-[#222328]"
                  } transition-colors`}
                >
                  <h3 className="text-white text-2xl font-medium">30m</h3>
                  <p className="text-[#B6B8C0] text-sm font-bold">Moderate</p>
                  <p className="text-[#B6B8C0] text-sm text-center">Steady progress</p>
                </button>

                <button
                  type="button"
                  onClick={() => setFormData({ ...formData, timeCommitment: "1h" })}
                  className={`flex flex-col items-center justify-center p-4 rounded-xl border ${
                    formData.timeCommitment === "1h"
                      ? "border-[#0AEFC9] bg-[#222328]"
                      : "border-[#33363E] bg-[#222328]"
                  } transition-colors`}
                >
                  <h3 className="text-white text-2xl font-medium">1h</h3>
                  <p className="text-[#B6B8C0] text-sm font-bold">Intensive</p>
                  <p className="text-[#B6B8C0] text-sm text-center">Fast-track learning</p>
                </button>

                <button
                  type="button"
                  onClick={() => setFormData({ ...formData, timeCommitment: "2h" })}
                  className={`flex flex-col items-center justify-center p-4 rounded-xl border ${
                    formData.timeCommitment === "2h"
                      ? "border-[#0AEFC9] bg-[#EFEDFF]"
                      : "border-[#33363E] bg-[#222328]"
                  } transition-colors`}
                >
                  <h3
                    className={`text-2xl font-medium ${
                      formData.timeCommitment === "2h" ? "text-[#593FE1]" : "text-white"
                    }`}
                  >
                    2h
                  </h3>
                  <p
                    className={`text-sm font-bold ${
                      formData.timeCommitment === "2h" ? "text-[#4F38C8]" : "text-[#B6B8C0]"
                    }`}
                  >
                    Deep Dive
                  </p>
                  <p
                    className={`text-sm text-center ${
                      formData.timeCommitment === "2h" ? "text-[#4F38C8]" : "text-[#B6B8C0]"
                    }`}
                  >
                    Immersive experience
                  </p>
                </button>
              </div>
            </div>

            <div className="flex flex-col gap-2">
              <label className="text-white text-sm font-medium">
                Target completion date (optional)
              </label>
              <div className="relative">
                <input
                  type="text"
                  placeholder="Set Target Date"
                  value={formData.targetDate}
                  onChange={(e) =>
                    setFormData({ ...formData, targetDate: e.target.value })
                  }
                  className="w-full h-[50px] px-4 rounded-xl border border-[#DBDBDC] bg-white text-base text-[#AAAAAD] placeholder:text-[#AAAAAD] focus:outline-none focus:ring-2 focus:ring-[#7C3BED]"
                />
                <svg
                  className="absolute right-4 top-1/2 -translate-y-1/2 pointer-events-none"
                  width="20"
                  height="21"
                  viewBox="0 0 20 21"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M5 8L10 13L15 8"
                    stroke="#999999"
                    strokeWidth="1.4"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </svg>
              </div>
            </div>
          </div>
        );

      case 7:
        return (
          <div className="flex flex-col gap-7">
            <div className="flex flex-col gap-1.5">
              <h2 className="text-white text-[22px] font-bold leading-6 tracking-tight">
                Course Format & Add-ons
              </h2>
              <p className="text-[#6B7280] text-sm leading-5">
                Customize your learning experience
              </p>
            </div>

            <div className="flex flex-col gap-3">
              <button
                type="button"
                onClick={() =>
                  setFormData({
                    ...formData,
                    addOns: {
                      ...formData.addOns,
                      autoGeneratedVideos: !formData.addOns.autoGeneratedVideos,
                    },
                  })
                }
                className="flex items-center justify-between p-4 rounded-xl border border-[#0AEFC9] bg-[#222328]"
              >
                <div className="flex items-center gap-3">
                  <svg
                    width="20"
                    height="21"
                    viewBox="0 0 20 21"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M13.3333 11.6334L17.6858 14.5351C17.7485 14.5769 17.8214 14.6008 17.8967 14.6044C17.972 14.608 18.0468 14.5911 18.1133 14.5556C18.1797 14.52 18.2352 14.4671 18.274 14.4024C18.3127 14.3378 18.3332 14.2638 18.3333 14.1884V7.35844C18.3333 7.28513 18.314 7.2131 18.2772 7.14965C18.2405 7.08619 18.1877 7.03354 18.1241 6.99702C18.0606 6.9605 17.9885 6.9414 17.9152 6.94165C17.8419 6.9419 17.7699 6.96149 17.7066 6.99844L13.3333 9.55011"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M11.6667 5.80005H3.33341C2.41294 5.80005 1.66675 6.54624 1.66675 7.46672V14.1334C1.66675 15.0539 2.41294 15.8 3.33341 15.8H11.6667C12.5872 15.8 13.3334 15.0539 13.3334 14.1334V7.46672C13.3334 6.54624 12.5872 5.80005 11.6667 5.80005Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                  <div className="flex flex-col items-start gap-1">
                    <div className="flex items-center gap-2">
                      <h4 className="text-white text-[15px] font-medium">Auto-generated Videos</h4>
                      <span className="px-2.5 py-0.5 rounded-full bg-[#7C3BED] text-white text-xs font-semibold">
                        Included
                      </span>
                    </div>
                    <p className="text-[#6B7280] text-sm">
                      AI-created explainer videos with voiceover
                    </p>
                  </div>
                </div>
                <div
                  className={`w-[22px] h-[22px] rounded border-2 flex items-center justify-center ${
                    formData.addOns.autoGeneratedVideos
                      ? "border-[#0AEFC9] bg-[#0AEFC9]"
                      : "border-[#0AEFC9]"
                  }`}
                >
                  {formData.addOns.autoGeneratedVideos && (
                    <svg
                      width="12"
                      height="13"
                      viewBox="0 0 12 13"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M10 3.91504L4.5 9.41504L2 6.91504"
                        stroke="white"
                        strokeWidth="1.4"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  )}
                </div>
              </button>

              <button
                type="button"
                onClick={() =>
                  setFormData({
                    ...formData,
                    addOns: { ...formData.addOns, aiTutor: !formData.addOns.aiTutor },
                  })
                }
                className="flex items-center justify-between p-4 rounded-xl border border-[#0AEFC9] bg-[#222328]"
              >
                <div className="flex items-center gap-3">
                  <svg
                    width="20"
                    height="21"
                    viewBox="0 0 20 21"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M6.58341 16.6967C8.1739 17.5125 10.0035 17.7335 11.7425 17.3198C13.4815 16.9061 15.0155 15.8848 16.0682 14.4401C17.1209 12.9954 17.6229 11.2222 17.4839 9.44012C17.3449 7.658 16.5739 5.98413 15.3099 4.72015C14.0459 3.45617 12.3721 2.6852 10.5899 2.54617C8.80782 2.40714 7.03464 2.90919 5.58993 3.96186C4.14522 5.01453 3.12399 6.54858 2.71027 8.28758C2.29654 10.0266 2.51753 11.8562 3.33341 13.4467L1.66675 18.3633L6.58341 16.6967Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                  <div className="flex flex-col items-start gap-1">
                    <div className="flex items-center gap-2">
                      <h4 className="text-white text-[16px] font-medium">Real-time AI Tutor</h4>
                      <span className="px-2.5 py-0.5 rounded-full bg-[#7C3BED] text-white text-xs font-semibold">
                        Included
                      </span>
                    </div>
                    <p className="text-[#6B7280] text-sm">
                      Interactive dialogue box for instant Q&A
                    </p>
                  </div>
                </div>
                <div
                  className={`w-[22px] h-[22px] rounded border-2 flex items-center justify-center ${
                    formData.addOns.aiTutor
                      ? "border-[#0AEFC9] bg-[#0AEFC9]"
                      : "border-[#0AEFC9]"
                  }`}
                >
                  {formData.addOns.aiTutor && (
                    <svg
                      width="12"
                      height="13"
                      viewBox="0 0 12 13"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M10 3.14502L4.5 8.64502L2 6.14502"
                        stroke="white"
                        strokeWidth="1.4"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  )}
                </div>
              </button>

              <button
                type="button"
                onClick={() =>
                  setFormData({
                    ...formData,
                    addOns: {
                      ...formData.addOns,
                      practiceQuizzes: !formData.addOns.practiceQuizzes,
                    },
                  })
                }
                className="flex items-center justify-between p-4 rounded-xl border border-[#0AEFC9] bg-[#222328]"
              >
                <div className="flex items-center gap-3">
                  <svg
                    width="20"
                    height="21"
                    viewBox="0 0 20 21"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10 18.5934C14.6025 18.5934 18.3334 14.8625 18.3334 10.2601C18.3334 5.65772 14.6025 1.92676 10 1.92676C5.39771 1.92676 1.66675 5.65772 1.66675 10.2601C1.66675 14.8625 5.39771 18.5934 10 18.5934Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M10 15.26C12.7614 15.26 15 13.0214 15 10.26C15 7.49859 12.7614 5.26001 10 5.26001C7.23858 5.26001 5 7.49859 5 10.26C5 13.0214 7.23858 15.26 10 15.26Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M9.99992 11.9266C10.9204 11.9266 11.6666 11.1804 11.6666 10.2599C11.6666 9.33945 10.9204 8.59326 9.99992 8.59326C9.07944 8.59326 8.33325 9.33945 8.33325 10.2599C8.33325 11.1804 9.07944 11.9266 9.99992 11.9266Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                  <div className="flex flex-col items-start gap-1">
                    <div className="flex items-center gap-2">
                      <h4 className="text-white text-[16px] font-medium">Practice Quizzes</h4>
                      <span className="px-2.5 py-0.5 rounded-full bg-[#7C3BED] text-white text-xs font-semibold">
                        Included
                      </span>
                    </div>
                    <p className="text-[#6B7280] text-sm">
                      Interactive assessments and knowledge checks
                    </p>
                  </div>
                </div>
                <div
                  className={`w-[22px] h-[22px] rounded border-2 flex items-center justify-center ${
                    formData.addOns.practiceQuizzes
                      ? "border-[#0AEFC9] bg-[#0AEFC9]"
                      : "border-[#0AEFC9]"
                  }`}
                >
                  {formData.addOns.practiceQuizzes && (
                    <svg
                      width="12"
                      height="13"
                      viewBox="0 0 12 13"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M10 3.26001L4.5 8.76001L2 6.26001"
                        stroke="white"
                        strokeWidth="1.4"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  )}
                </div>
              </button>

              <button
                type="button"
                onClick={() =>
                  setFormData({
                    ...formData,
                    addOns: {
                      ...formData.addOns,
                      completionCertificate: !formData.addOns.completionCertificate,
                    },
                  })
                }
                className="flex items-center justify-between p-4 rounded-xl border border-[#E5E7EB] bg-[#222328]"
              >
                <div className="flex items-center gap-3">
                  <svg
                    width="20"
                    height="21"
                    viewBox="0 0 20 21"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5.00008 7.98991H3.75008C3.19755 7.98991 2.66764 7.77042 2.27694 7.37971C1.88624 6.98901 1.66675 6.45911 1.66675 5.90658C1.66675 5.35404 1.88624 4.82414 2.27694 4.43344C2.66764 4.04274 3.19755 3.82324 3.75008 3.82324H5.00008"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M15 7.98991H16.25C16.8025 7.98991 17.3324 7.77042 17.7231 7.37971C18.1138 6.98901 18.3333 6.45911 18.3333 5.90658C18.3333 5.35404 18.1138 4.82414 17.7231 4.43344C17.3324 4.04274 16.8025 3.82324 16.25 3.82324H15"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M3.33325 18.8232H16.6666"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M8.33325 12.7065V14.6565C8.33325 15.1149 7.94159 15.4732 7.52492 15.6649C6.54159 16.1149 5.83325 17.3565 5.83325 18.8232"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M11.6667 12.7065V14.6565C11.6667 15.1149 12.0584 15.4732 12.4751 15.6649C13.4584 16.1149 14.1667 17.3565 14.1667 18.8232"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M15 2.15674H5V7.99007C5 9.31615 5.52678 10.5879 6.46447 11.5256C7.40215 12.4633 8.67392 12.9901 10 12.9901C11.3261 12.9901 12.5979 12.4633 13.5355 11.5256C14.4732 10.5879 15 9.31615 15 7.99007V2.15674Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                  <div className="flex flex-col items-start gap-1">
                    <div className="flex items-center gap-2">
                      <h4 className="text-white text-[15px] font-medium">Completion Certificate</h4>
                      <span className="px-2.5 py-0.5 rounded-full bg-[#F1F5F9] text-[#222328] text-xs font-semibold">
                        Premium
                      </span>
                    </div>
                    <p className="text-[#6B7280] text-sm">
                      Professional certificate upon course completion
                    </p>
                  </div>
                </div>
                <div
                  className={`w-[18px] h-[18px] rounded border-[1.5px] ${
                    formData.addOns.completionCertificate
                      ? "border-[#0AEFC9] bg-[#0AEFC9]"
                      : "border-[#0AEFC9]"
                  }`}
                >
                  {formData.addOns.completionCertificate && (
                    <svg
                      width="18"
                      height="18"
                      viewBox="0 0 12 13"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M10 3.26001L4.5 8.76001L2 6.26001"
                        stroke="white"
                        strokeWidth="1.4"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  )}
                </div>
              </button>
              <button
                type="button"
                onClick={() =>
                  setFormData({
                    ...formData,
                    addOns: {
                      ...formData.addOns,
                      referenceMaterials: !formData.addOns.referenceMaterials,
                    },
                  })
                }
                className="flex items-center justify-between p-4 rounded-xl border border-[#E5E7EB] bg-[#222328]"
              >
                <div className="flex items-center gap-3">
                  <svg
                    width="20"
                    height="21"
                    viewBox="0 0 20 21"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M12.4999 2.38672H4.99992C4.55789 2.38672 4.13397 2.56231 3.82141 2.87487C3.50885 3.18743 3.33325 3.61136 3.33325 4.05339V17.3867C3.33325 17.8287 3.50885 18.2527 3.82141 18.5652C4.13397 18.8778 4.55789 19.0534 4.99992 19.0534H14.9999C15.4419 19.0534 15.8659 18.8778 16.1784 18.5652C16.491 18.2527 16.6666 17.8287 16.6666 17.3867V6.55339L12.4999 2.38672Z"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M11.6667 2.38672V5.72005C11.6667 6.16208 11.8423 6.586 12.1549 6.89856C12.4675 7.21112 12.8914 7.38672 13.3334 7.38672H16.6667"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M8.33341 8.21997H6.66675"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M13.3334 11.5532H6.66675"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M13.3334 14.8867H6.66675"
                      stroke="#7C3BED"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                  <div className="flex flex-col items-start gap-1">
                    <div className="flex items-center gap-2">
                      <h4 className="text-white text-[15px] font-medium">Reference Materials</h4>
                      <span className="px-2.5 py-0.5 rounded-full border border-[#E5E7EB] text-white text-xs font-semibold">
                        Optional
                      </span>
                    </div>
                    <p className="text-[#6B7280] text-sm">
                      Upload your own PDFs, notes, and resources
                    </p>
                  </div>
                </div>
                <div
                  className={`w-[18px] h-[18px] rounded border-[1.5px] ${
                    formData.addOns.referenceMaterials
                      ? "border-[#0AEFC9] bg-[#0AEFC9]"
                      : "border-[#0AEFC9]"
                  }`}
                >
                  {formData.addOns.referenceMaterials && (
                    <svg
                      width="18"
                      height="18"
                      viewBox="0 0 12 13"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M10 3.26001L4.5 8.76001L2 6.26001"
                        stroke="white"
                        strokeWidth="1.4"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  )}
                </div>
              </button>
            </div>

            <div className="flex items-start gap-3 p-4 rounded-xl border border-[#FEF08A] bg-gradient-to-r from-[#FEFCE8] to-[#FFF7ED]">
              <div className="flex flex-col gap-2">
                <h4 className="text-[#854D0E] text-[16px] font-medium">💡 Pro Tip</h4>
                <p className="text-[#A16207] text-sm">
                  The AI Tutor can pause videos automatically when you ask questions, making your
                  learning more interactive!
                </p>
              </div>
            </div>
          </div>
        );

      case 8:
        return (
          <div className="flex flex-col gap-6">
            <div className="rounded-xl border border-[#7C3BED] bg-white p-6">
              <div className="flex items-start justify-between mb-6">
                <div>
                  <h2 className="text-[#030711] text-[22px] font-bold mb-2">
                    Python for Data Science – Beginner Friendly
                  </h2>
                  <p className="text-[#6B7280] text-[17px]">AI-Generated Course Preview</p>
                </div>
                <span className="px-3 py-1 rounded-full bg-[#DCFCE7] text-[#166534] text-xs sm:text-sm font-semibold whitespace-nowrap">
                  Ready to Launch
                </span>
              </div>

              <div className="flex items-center justify-around mb-6">
                <div className="text-center">
                  <div className="text-[#7C3BED] text-[15px] font-bold">4 weeks</div>
                  <div className="text-[#6B7280] text-sm">Estimated Duration</div>
                </div>
                <div className="text-center">
                  <div className="text-[#7C3BED] text-[15px] font-bold">6 lessons</div>
                  <div className="text-[#6B7280] text-sm">Total Lessons</div>
                </div>
                <div className="text-center">
                  <div className="text-[#7C3BED] text-[15px] font-bold">2h</div>
                  <div className="text-[#6B7280] text-sm">Per Session</div>
                </div>
              </div>

              <div className="rounded-xl bg-gradient-to-r from-[rgba(124,59,237,0.1)] to-[rgba(124,59,237,0.05)] p-6">
                <div className="flex items-center gap-2 mb-3">
                  <svg
                    width="21"
                    height="21"
                    viewBox="0 0 21 21"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5.36035 3.34009L17.027 10.8401L5.36035 18.3401V3.34009Z"
                      stroke="#030711"
                      strokeWidth="1.66667"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                  <h3 className="text-[#030711] text-[16px] font-semibold">
                    30-second Preview Sample
                  </h3>
                </div>

                <div className="relative h-[450px] rounded-xl bg-black/80 flex flex-col items-center justify-center">
                  <svg
                    className="w-12 h-12 opacity-80"
                    width="49"
                    height="49"
                    viewBox="0 0 49 49"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <g opacity="0.8">
                      <path
                        d="M12.4902 6.78003L40.4902 24.78L12.4902 42.78V6.78003Z"
                        stroke="white"
                        strokeWidth="4"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </g>
                  </svg>
                  <p className="text-white text-sm text-center mt-2">
                    "Python for Data Science" - Introduction Video
                  </p>
                  <p className="text-white/70 text-xs text-center">
                    Narrated in English with professional style
                  </p>
                </div>
              </div>
            </div>

            <div className="rounded-xl border border-[#E5E7EB] bg-white p-6">
              <h3 className="text-[#030711] text-[23px] font-semibold mb-6">
                Course Modules & Lessons
              </h3>

              <div className="flex flex-col gap-4">
                {[
                  {
                    number: "1",
                    title: "Introduction & Fundamentals",
                    type: "Video + Quiz",
                    duration: "25 min",
                  },
                  {
                    number: "2",
                    title: "Core Concepts Deep Dive",
                    type: "Video + Practice",
                    duration: "30 min",
                  },
                  {
                    number: "3",
                    title: "Practical Applications",
                    type: "Hands-on",
                    duration: "35 min",
                  },
                  {
                    number: "4",
                    title: "Advanced Techniques",
                    type: "Video + AI Tutor",
                    duration: "28 min",
                  },
                  {
                    number: "5",
                    title: "Real-world Project",
                    type: "Project",
                    duration: "45 min",
                  },
                  {
                    number: "6",
                    title: "Assessment & Next Steps",
                    type: "Final Quiz",
                    duration: "20 min",
                  },
                ].map((module) => (
                  <div
                    key={module.number}
                    className="flex items-center justify-between p-4 rounded-xl border border-[#E5E7EB]"
                  >
                    <div className="flex items-center gap-3">
                      <div className="flex items-center justify-center w-8 h-8 rounded-full bg-[rgba(124,59,237,0.1)]">
                        <span className="text-[#030711] text-sm font-medium">
                          {module.number}
                        </span>
                      </div>
                      <div>
                        <h4 className="text-[#030711] text-[16px] font-medium">{module.title}</h4>
                        <p className="text-[#6B7280] text-sm">{module.type}</p>
                      </div>
                    </div>
                    <span className="px-3 py-1 rounded-full border border-[#E5E7EB] text-[#030711] text-xs font-semibold">
                      {module.duration}
                    </span>
                  </div>
                ))}
              </div>
            </div>

            <div className="flex items-center justify-between gap-4">
              <button
                type="button"
                onClick={handleBack}
                className="flex items-center gap-4 px-8 py-3 rounded-lg border border-[#454953] bg-[#101113] text-[#F9F9F9] transition-colors hover:bg-[#222328]"
              >
                <svg
                  width="17"
                  height="17"
                  viewBox="0 0 17 17"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M8.50016 13.2367L3.8335 8.56999L8.50016 3.90332"
                    stroke="#F9F9F9"
                    strokeWidth="1.33333"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                  <path
                    d="M13.1668 8.57007H3.8335"
                    stroke="#F9F9F9"
                    strokeWidth="1.33333"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </svg>
                <span className="text-sm font-medium">Edit Setup</span>
              </button>

              <button
                type="button"
                onClick={handleNext}
                className="flex items-center gap-4 px-8 py-3 rounded-lg bg-[#0AEFC9] text-white shadow-[0_10px_40px_-10px_rgba(124,59,237,0.2)] transition-colors hover:bg-[#09D4B3]"
              >
                <svg
                  width="17"
                  height="17"
                  viewBox="0 0 17 17"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M4.5 2.57007L13.8333 8.57007L4.5 14.5701V2.57007Z"
                    stroke="white"
                    strokeWidth="1.33333"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </svg>
                <span className="text-sm font-medium">Start Learning Now</span>
              </button>
            </div>
          </div>
        );

      default:
        return null;
    }
  };

  return (
    <div className="h-screen bg-[#101113] font-host flex overflow-hidden">
      {isSidebarOpen && (
        <div className="fixed inset-0 z-50 flex lg:hidden">
          <button
            type="button"
            aria-label="Close sidebar"
            className="absolute inset-0 bg-black/60"
            onClick={() => setIsSidebarOpen(false)}
          />
          <aside className="relative z-10 flex h-full w-[80%] max-w-[320px] flex-col gap-[68px] overflow-y-auto border-r border-[#454953] bg-[#101113] p-6">
            <div className="flex items-center justify-between">
              <svg
                className="w-[143px] h-10"
                viewBox="0 0 143 40"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clipPath="url(#clip0_31_4563)">
                  <path
                    d="M55.919 28.4792V33.9225H44.2168V6.11572H55.7189V11.5591H50.0679V18.2326H55.1629V23.6759H50.0679V28.4821H55.919V28.4792Z"
                    fill="#6346FA"
                  />
                  <path
                    d="M71.7188 4.80322V33.9195H66.0677V32.5308C64.994 33.802 63.6408 34.4362 62.2876 34.4362C59.7813 34.4362 57.3926 32.1315 57.3926 27.3252V19.3012C57.3926 14.4949 59.7813 12.152 62.2876 12.152C63.6408 12.152 64.994 12.8273 66.0677 14.0986V4.80322H71.7188ZM66.0677 19.5008C66.0677 18.1914 65.3117 17.5161 64.5557 17.5161C63.7996 17.5161 63.0436 18.1914 63.0436 19.5008V27.1285C63.0436 28.3998 63.7996 29.0751 64.5557 29.0751C65.3117 29.0751 66.0677 28.3998 66.0677 27.1285V19.5008Z"
                    fill="#6346FA"
                  />
                  <path
                    d="M73.79 12.71H79.4411V27.1286C79.4411 28.3999 80.1971 29.0752 80.9531 29.0752C81.7092 29.0752 82.4652 28.3999 82.4652 27.1286V12.71H88.1162V33.9225H82.4652V32.2138C81.4297 33.6436 79.8382 34.4774 78.285 34.4774C75.9757 34.4774 73.7871 32.6894 73.7871 28.5203V12.71H73.79Z"
                    fill="#6346FA"
                  />
                  <path
                    d="M96.2769 11.5561V18.2296H101.372V23.673H96.2769V33.9225H90.4258V6.11572H101.928V11.5591H96.2769V11.5561Z"
                    fill="#0AEFC9"
                  />
                  <path d="M103.28 33.9195V4.80322H108.931V33.9195H103.28Z" fill="#0AEFC9" />
                  <path
                    d="M125.17 24.7063H116.495V27.1285C116.495 28.3997 117.251 29.075 118.007 29.075C118.763 29.075 119.519 28.3997 119.519 27.1285V25.6986H125.17V27.3281C125.17 32.0962 121.587 34.4772 118.007 34.4772C114.427 34.4772 110.844 32.0932 110.844 27.3281V19.304C110.844 14.4978 114.427 12.1138 118.007 12.1138C121.587 12.1138 125.17 14.4978 125.17 19.304V24.7063ZM119.519 19.5007C119.519 18.1913 118.763 17.516 118.007 17.516C117.251 17.516 116.495 18.1913 116.495 19.5007V20.6927H119.519V19.5007Z"
                    fill="#0AEFC9"
                  />
                  <path
                    d="M143 33.9196H137.349V28.3588C137.349 26.9672 136.116 26.2537 134.922 26.2537C133.728 26.2537 132.454 26.9672 132.454 28.3588V33.9196H126.803V28.1592C126.803 26.2537 127.838 24.545 129.589 23.7493C128.474 22.5573 127.003 20.9689 127.003 18.9842V12.707H132.654V18.5849C132.654 20.0558 133.769 20.8104 134.922 20.8104C136.075 20.8104 137.152 20.0558 137.152 18.5849V12.707H142.803V18.9842C142.803 20.9689 141.329 22.5602 140.217 23.7493C142.047 24.545 143.003 26.2126 143.003 28.1592V33.9196H143Z"
                    fill="#0AEFC9"
                  />
                  <path
                    d="M22.8097 19.6418H25.4249C25.4249 22.6043 23.0098 25.0177 20.0386 25.0177C17.0675 25.0177 14.6523 22.6043 14.6523 19.6418H17.2675C17.2675 21.1656 18.5089 22.4076 20.0386 22.4076C21.5683 22.4076 22.8097 21.1656 22.8097 19.6418Z"
                    fill="#6346FA"
                  />
                  <path
                    d="M20.039 0C8.97225 0 0 8.95479 0 20C0 31.0452 8.97225 40 20.039 40C31.1058 40 40.078 31.0452 40.078 20C40.078 8.95479 31.1058 0 20.039 0ZM31.4235 28.7258H24.7487C22.1894 28.7258 20.1125 30.7986 20.1125 33.3529C20.1125 30.7986 18.0386 28.7258 15.4793 28.7258H8.65454V10.8749H15.4793C18.0386 10.8749 20.1125 12.9448 20.1125 15.5021C20.1125 12.9448 22.1894 10.8749 24.7487 10.8749H31.4235V28.7258Z"
                    fill="#0AEFC9"
                  />
                </g>
                <defs>
                  <clipPath id="clip0_31_4563">
                    <rect width="143" height="40" fill="white" />
                  </clipPath>
                </defs>
              </svg>
              <button
                type="button"
                aria-label="Close sidebar"
                className="text-[#838794] transition-colors hover:text-white"
                onClick={() => setIsSidebarOpen(false)}
              >
                <svg
                  className="h-6 w-6"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M6 18L18 6M6 6l12 12"
                  />
                </svg>
              </button>
            </div>

            <nav className="flex flex-col gap-3.5">
              <Link
                to="/dashboard"
                className="flex items-center gap-2 rounded-md px-4 py-3.5 text-[#838794] transition-colors hover:bg-[#222328]"
              >
                <svg
                  className="h-[18px] w-[18px]"
                  viewBox="0 0 18 18"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M5.43 1.5H4.005C2.3625 1.5 1.5 2.3625 1.5 3.9975V5.4225C1.5 7.0575 2.3625 7.92 3.9975 7.92H5.4225C7.0575 7.92 7.92 7.0575 7.92 5.4225V3.9975C7.9275 2.3625 7.065 1.5 5.43 1.5Z"
                    fill="currentColor"
                  />
                  <path
                    opacity="0.4"
                    d="M14.0026 1.5H12.5776C10.9426 1.5 10.0801 2.3625 10.0801 3.9975V5.4225C10.0801 7.0575 10.9426 7.92 12.5776 7.92H14.0026C15.6376 7.92 16.5001 7.0575 16.5001 5.4225V3.9975C16.5001 2.3625 15.6376 1.5 14.0026 1.5Z"
                    fill="currentColor"
                  />
                  <path
                    d="M14.0026 10.0725H12.5776C10.9426 10.0725 10.0801 10.935 10.0801 12.57V13.995C10.0801 15.63 10.9426 16.4925 12.5776 16.4925H14.0026C15.6376 16.4925 16.5001 15.63 16.5001 13.995V12.57C16.5001 10.935 15.6376 10.0725 14.0026 10.0725Z"
                    fill="currentColor"
                  />
                  <path
                    opacity="0.4"
                    d="M5.43 10.0725H4.005C2.3625 10.0725 1.5 10.935 1.5 12.57V13.995C1.5 15.6375 2.3625 16.5 3.9975 16.5H5.4225C7.0575 16.5 7.92 15.6375 7.92 14.0025V12.5775C7.9275 10.935 7.065 10.0725 5.43 10.0725Z"
                    fill="currentColor"
                  />
                </svg>
                <span className="text-base">Overview</span>
              </Link>

              <Link
                to="/my-courses"
                className="flex items-center gap-2 rounded-full bg-[#593FE1] px-4 py-3.5 text-[#DFEBFB] transition-colors"
              >
                <svg
                  className="h-[18px] w-[18px]"
                  viewBox="0 0 18 18"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    opacity="0.4"
                    d="M9 3.97502V15.9975C8.8725 15.9975 8.7375 15.975 8.6325 15.915L8.6025 15.9C7.1625 15.1125 4.65 14.2875 3.0225 14.07L2.805 14.04C2.085 13.95 1.5 13.275 1.5 12.555V3.49502C1.5 2.60252 2.2275 1.92752 3.12 2.00252C4.695 2.13002 7.08 2.92502 8.415 3.75752L8.6025 3.87002C8.715 3.93752 8.8575 3.97502 9 3.97502Z"
                    fill="currentColor"
                  />
                  <path
                    d="M16.5 3.5024V12.5549C16.5 13.2749 15.915 13.9499 15.195 14.0399L14.9475 14.0699C13.3125 14.2874 10.7925 15.1199 9.3525 15.9149C9.255 15.9749 9.135 15.9974 9 15.9974V3.9749C9.1425 3.9749 9.285 3.9374 9.3975 3.8699L9.525 3.7874C10.86 2.9474 13.2525 2.1449 14.8275 2.0099H14.8725C15.765 1.9349 16.5 2.6024 16.5 3.5024Z"
                    fill="currentColor"
                  />
                  <path
                    d="M5.8125 6.92993H4.125C3.8175 6.92993 3.5625 6.67493 3.5625 6.36743C3.5625 6.05993 3.8175 5.80493 4.125 5.80493H5.8125C6.12 5.80493 6.375 6.05993 6.375 6.36743C6.375 6.67493 6.12 6.92993 5.8125 6.92993Z"
                    fill="currentColor"
                  />
                  <path
                    d="M6.375 9.17993H4.125C3.8175 9.17993 3.5625 8.92493 3.5625 8.61743C3.5625 8.30993 3.8175 8.05493 4.125 8.05493H6.375C6.6825 8.05493 6.9375 8.30993 6.9375 8.61743C6.9375 8.92493 6.6825 9.17993 6.375 9.17993Z"
                    fill="currentColor"
                  />
                </svg>
                <span className="text-base">My Courses</span>
              </Link>

              <Link
                to="/explore"
                className="flex items-center gap-2 rounded-md px-4 py-3.5 text-[#838794] transition-colors hover:bg-[#222328]"
              >
                <svg
                  className="h-[18px] w-[18px]"
                  viewBox="0 0 18 18"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    opacity="0.4"
                    d="M8.25 15.0074C11.982 15.0074 15.0074 11.982 15.0074 8.24993C15.0074 4.51787 11.982 1.49243 8.25 1.49243C4.51794 1.49243 1.49243 4.51787 1.49243 8.24993C1.49243 11.982 4.51787 15.0074 8.25 15.0074Z"
                    fill="currentColor"
                  />
                  <path
                    d="M9.57793 6.21751C9.10543 6.06751 8.60293 6.15751 8.24293 6.43501C7.87543 6.15751 7.38793 6.06751 6.91543 6.21751C5.89543 6.54751 5.57293 7.71001 5.85793 8.59501C6.29293 9.95251 7.72543 10.6575 8.24293 10.6575C8.74543 10.6575 10.2079 9.93751 10.6279 8.59501C10.9204 7.71001 10.5979 6.54751 9.57793 6.21751Z"
                    fill="currentColor"
                  />
                  <path
                    d="M16.492 14.2125C16.2445 13.755 15.7195 13.5 15.0145 13.5C14.482 13.5 14.0246 13.7175 13.7546 14.0925C13.4846 14.4675 13.4246 14.97 13.5896 15.4725C13.9121 16.4475 14.4745 16.665 14.782 16.7025C14.827 16.71 14.872 16.71 14.9245 16.71C15.2545 16.71 15.7645 16.5675 16.2595 15.825C16.657 15.2475 16.732 14.67 16.492 14.2125Z"
                    fill="currentColor"
                  />
                </svg>
                <span className="text-base">Explore Courses</span>
              </Link>

              <Link
                to="/settings"
                className="flex items-center gap-2 rounded-md px-4 py-3.5 text-[#838794] transition-colors hover:bg-[#222328]"
              >
                <svg
                  className="h-[18px] w-[18px]"
                  viewBox="0 0 18 18"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    opacity="0.4"
                    d="M1.5 9.66007V8.34007C1.5 7.56007 2.1375 6.91507 2.925 6.91507C4.2825 6.91507 4.8375 5.95507 4.155 4.77757C3.765 4.10257 3.9975 3.22507 4.68 2.83507L5.9775 2.09257C6.57 1.74007 7.335 1.95007 7.6875 2.54257L7.77 2.68507C8.445 3.86257 9.555 3.86257 10.2375 2.68507L10.32 2.54257C10.6725 1.95007 11.4375 1.74007 12.03 2.09257L13.3275 2.83507C14.01 3.22507 14.2425 4.10257 13.8525 4.77757C13.17 5.95507 13.725 6.91507 15.0825 6.91507C15.8625 6.91507 16.5075 7.55257 16.5075 8.34007V9.66007C16.5075 10.4401 15.87 11.0851 15.0825 11.0851C13.725 11.0851 13.17 12.0451 13.8525 13.2226C14.2425 13.9051 14.01 14.7751 13.3275 15.1651L12.03 15.9076C11.4375 16.2601 10.6725 16.0501 10.32 15.4576L10.2375 15.3151C9.5625 14.1376 8.4525 14.1376 7.77 15.3151L7.6875 15.4576C7.335 16.0501 6.57 16.2601 5.9775 15.9076L4.68 15.1651C3.9975 14.7751 3.765 13.8976 4.155 13.2226C4.8375 12.0451 4.2825 11.0851 2.925 11.0851C2.1375 11.0851 1.5 10.4401 1.5 9.66007Z"
                    fill="currentColor"
                  />
                  <path
                    d="M9 11.4375C10.3462 11.4375 11.4375 10.3462 11.4375 9C11.4375 7.65381 10.3462 6.5625 9 6.5625C7.65381 6.5625 6.5625 7.65381 6.5625 9C6.5625 10.3462 7.65381 11.4375 9 11.4375Z"
                    fill="currentColor"
                  />
                </svg>
                <span className="text-base">Settings</span>
              </Link>
            </nav>
          </aside>
        </div>
      )}

      <aside className="hidden lg:flex h-full w-[253px] flex-col gap-[68px] border-r border-[#454953] p-6 overflow-y-auto">
        <div className="flex items-center justify-between">
          <svg
            className="w-[143px] h-10"
            viewBox="0 0 143 40"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g clipPath="url(#clip0_31_4563)">
              <path
                d="M55.919 28.4792V33.9225H44.2168V6.11572H55.7189V11.5591H50.0679V18.2326H55.1629V23.6759H50.0679V28.4821H55.919V28.4792Z"
                fill="#6346FA"
              />
              <path
                d="M71.7188 4.80322V33.9195H66.0677V32.5308C64.994 33.802 63.6408 34.4362 62.2876 34.4362C59.7813 34.4362 57.3926 32.1315 57.3926 27.3252V19.3012C57.3926 14.4949 59.7813 12.152 62.2876 12.152C63.6408 12.152 64.994 12.8273 66.0677 14.0986V4.80322H71.7188ZM66.0677 19.5008C66.0677 18.1914 65.3117 17.5161 64.5557 17.5161C63.7996 17.5161 63.0436 18.1914 63.0436 19.5008V27.1285C63.0436 28.3998 63.7996 29.0751 64.5557 29.0751C65.3117 29.0751 66.0677 28.3998 66.0677 27.1285V19.5008Z"
                fill="#6346FA"
              />
              <path
                d="M73.79 12.71H79.4411V27.1286C79.4411 28.3999 80.1971 29.0752 80.9531 29.0752C81.7092 29.0752 82.4652 28.3999 82.4652 27.1286V12.71H88.1162V33.9225H82.4652V32.2138C81.4297 33.6436 79.8382 34.4774 78.285 34.4774C75.9757 34.4774 73.7871 32.6894 73.7871 28.5203V12.71H73.79Z"
                fill="#6346FA"
              />
              <path
                d="M96.2769 11.5561V18.2296H101.372V23.673H96.2769V33.9225H90.4258V6.11572H101.928V11.5591H96.2769V11.5561Z"
                fill="#0AEFC9"
              />
              <path d="M103.28 33.9195V4.80322H108.931V33.9195H103.28Z" fill="#0AEFC9" />
              <path
                d="M125.17 24.7063H116.495V27.1285C116.495 28.3997 117.251 29.075 118.007 29.075C118.763 29.075 119.519 28.3997 119.519 27.1285V25.6986H125.17V27.3281C125.17 32.0962 121.587 34.4772 118.007 34.4772C114.427 34.4772 110.844 32.0932 110.844 27.3281V19.304C110.844 14.4978 114.427 12.1138 118.007 12.1138C121.587 12.1138 125.17 14.4978 125.17 19.304V24.7063ZM119.519 19.5007C119.519 18.1913 118.763 17.516 118.007 17.516C117.251 17.516 116.495 18.1913 116.495 19.5007V20.6927H119.519V19.5007Z"
                fill="#0AEFC9"
              />
              <path
                d="M143 33.9196H137.349V28.3588C137.349 26.9672 136.116 26.2537 134.922 26.2537C133.728 26.2537 132.454 26.9672 132.454 28.3588V33.9196H126.803V28.1592C126.803 26.2537 127.838 24.545 129.589 23.7493C128.474 22.5573 127.003 20.9689 127.003 18.9842V12.707H132.654V18.5849C132.654 20.0558 133.769 20.8104 134.922 20.8104C136.075 20.8104 137.152 20.0558 137.152 18.5849V12.707H142.803V18.9842C142.803 20.9689 141.329 22.5602 140.217 23.7493C142.047 24.545 143.003 26.2126 143.003 28.1592V33.9196H143Z"
                fill="#0AEFC9"
              />
              <path
                d="M22.8097 19.6418H25.4249C25.4249 22.6043 23.0098 25.0177 20.0386 25.0177C17.0675 25.0177 14.6523 22.6043 14.6523 19.6418H17.2675C17.2675 21.1656 18.5089 22.4076 20.0386 22.4076C21.5683 22.4076 22.8097 21.1656 22.8097 19.6418Z"
                fill="#6346FA"
              />
              <path
                d="M20.039 0C8.97225 0 0 8.95479 0 20C0 31.0452 8.97225 40 20.039 40C31.1058 40 40.078 31.0452 40.078 20C40.078 8.95479 31.1058 0 20.039 0ZM31.4235 28.7258H24.7487C22.1894 28.7258 20.1125 30.7986 20.1125 33.3529C20.1125 30.7986 18.0386 28.7258 15.4793 28.7258H8.65454V10.8749H15.4793C18.0386 10.8749 20.1125 12.9448 20.1125 15.5021C20.1125 12.9448 22.1894 10.8749 24.7487 10.8749H31.4235V28.7258Z"
                fill="#0AEFC9"
              />
            </g>
            <defs>
              <clipPath id="clip0_31_4563">
                <rect width="143" height="40" fill="white" />
              </clipPath>
            </defs>
          </svg>
          <button
            type="button"
            className="text-[#838794] transition-colors hover:text-white"
          >
            <svg
              className="h-6 w-6"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M21.97 15V9C21.97 4 19.97 2 14.97 2H8.96997C3.96997 2 1.96997 4 1.96997 9V15C1.96997 20 3.96997 22 8.96997 22H14.97C19.97 22 21.97 20 21.97 15Z"
                stroke="currentColor"
                strokeWidth="1.5"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
              <path
                d="M7.96997 2V22"
                stroke="currentColor"
                strokeWidth="1.5"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
              <path
                d="M14.9699 9.43994L12.4099 11.9999L14.9699 14.5599"
                stroke="currentColor"
                strokeWidth="1.5"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
            </svg>
          </button>
        </div>

        <nav className="flex flex-col gap-3.5">
          <Link
            to="/dashboard"
            className="flex items-center gap-2 rounded-md px-4 py-3.5 text-[#838794] transition-colors hover:bg-[#222328]"
          >
            <svg
              className="h-[18px] w-[18px]"
              viewBox="0 0 18 18"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M5.43 1.5H4.005C2.3625 1.5 1.5 2.3625 1.5 3.9975V5.4225C1.5 7.0575 2.3625 7.92 3.9975 7.92H5.4225C7.0575 7.92 7.92 7.0575 7.92 5.4225V3.9975C7.9275 2.3625 7.065 1.5 5.43 1.5Z"
                fill="currentColor"
              />
              <path
                opacity="0.4"
                d="M14.0026 1.5H12.5776C10.9426 1.5 10.0801 2.3625 10.0801 3.9975V5.4225C10.0801 7.0575 10.9426 7.92 12.5776 7.92H14.0026C15.6376 7.92 16.5001 7.0575 16.5001 5.4225V3.9975C16.5001 2.3625 15.6376 1.5 14.0026 1.5Z"
                fill="currentColor"
              />
              <path
                d="M14.0026 10.0725H12.5776C10.9426 10.0725 10.0801 10.935 10.0801 12.57V13.995C10.0801 15.63 10.9426 16.4925 12.5776 16.4925H14.0026C15.6376 16.4925 16.5001 15.63 16.5001 13.995V12.57C16.5001 10.935 15.6376 10.0725 14.0026 10.0725Z"
                fill="currentColor"
              />
              <path
                opacity="0.4"
                d="M5.43 10.0725H4.005C2.3625 10.0725 1.5 10.935 1.5 12.57V13.995C1.5 15.6375 2.3625 16.5 3.9975 16.5H5.4225C7.0575 16.5 7.92 15.6375 7.92 14.0025V12.5775C7.9275 10.935 7.065 10.0725 5.43 10.0725Z"
                fill="currentColor"
              />
            </svg>
            <span className="text-base">Overview</span>
          </Link>

          <Link
            to="/my-courses"
            className="flex items-center gap-2 rounded-full bg-[#593FE1] px-4 py-3.5 text-[#DFEBFB] transition-colors"
          >
            <svg
              className="h-[18px] w-[18px]"
              viewBox="0 0 18 18"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                opacity="0.4"
                d="M9 3.97502V15.9975C8.8725 15.9975 8.7375 15.975 8.6325 15.915L8.6025 15.9C7.1625 15.1125 4.65 14.2875 3.0225 14.07L2.805 14.04C2.085 13.95 1.5 13.275 1.5 12.555V3.49502C1.5 2.60252 2.2275 1.92752 3.12 2.00252C4.695 2.13002 7.08 2.92502 8.415 3.75752L8.6025 3.87002C8.715 3.93752 8.8575 3.97502 9 3.97502Z"
                fill="currentColor"
              />
              <path
                d="M16.5 3.5024V12.5549C16.5 13.2749 15.915 13.9499 15.195 14.0399L14.9475 14.0699C13.3125 14.2874 10.7925 15.1199 9.3525 15.9149C9.255 15.9749 9.135 15.9974 9 15.9974V3.9749C9.1425 3.9749 9.285 3.9374 9.3975 3.8699L9.525 3.7874C10.86 2.9474 13.2525 2.1449 14.8275 2.0099H14.8725C15.765 1.9349 16.5 2.6024 16.5 3.5024Z"
                fill="currentColor"
              />
              <path
                d="M5.8125 6.92993H4.125C3.8175 6.92993 3.5625 6.67493 3.5625 6.36743C3.5625 6.05993 3.8175 5.80493 4.125 5.80493H5.8125C6.12 5.80493 6.375 6.05993 6.375 6.36743C6.375 6.67493 6.12 6.92993 5.8125 6.92993Z"
                fill="currentColor"
              />
              <path
                d="M6.375 9.17993H4.125C3.8175 9.17993 3.5625 8.92493 3.5625 8.61743C3.5625 8.30993 3.8175 8.05493 4.125 8.05493H6.375C6.6825 8.05493 6.9375 8.30993 6.9375 8.61743C6.9375 8.92493 6.6825 9.17993 6.375 9.17993Z"
                fill="currentColor"
              />
            </svg>
            <span className="text-base">My Courses</span>
          </Link>

          <Link
            to="/explore"
            className="flex items-center gap-2 rounded-md px-4 py-3.5 text-[#838794] transition-colors hover:bg-[#222328]"
          >
            <svg
              className="h-[18px] w-[18px]"
              viewBox="0 0 18 18"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                opacity="0.4"
                d="M8.25 15.0074C11.982 15.0074 15.0074 11.982 15.0074 8.24993C15.0074 4.51787 11.982 1.49243 8.25 1.49243C4.51794 1.49243 1.49243 4.51787 1.49243 8.24993C1.49243 11.982 4.51787 15.0074 8.25 15.0074Z"
                fill="currentColor"
              />
              <path
                d="M9.57793 6.21751C9.10543 6.06751 8.60293 6.15751 8.24293 6.43501C7.87543 6.15751 7.38793 6.06751 6.91543 6.21751C5.89543 6.54751 5.57293 7.71001 5.85793 8.59501C6.29293 9.95251 7.72543 10.6575 8.24293 10.6575C8.74543 10.6575 10.2079 9.93751 10.6279 8.59501C10.9204 7.71001 10.5979 6.54751 9.57793 6.21751Z"
                fill="currentColor"
              />
              <path
                d="M16.492 14.2125C16.2445 13.755 15.7195 13.5 15.0145 13.5C14.482 13.5 14.0246 13.7175 13.7546 14.0925C13.4846 14.4675 13.4246 14.97 13.5896 15.4725C13.9121 16.4475 14.4745 16.665 14.782 16.7025C14.827 16.71 14.872 16.71 14.9245 16.71C15.2545 16.71 15.7645 16.5675 16.2595 15.825C16.657 15.2475 16.732 14.67 16.492 14.2125Z"
                fill="currentColor"
              />
            </svg>
            <span className="text-base">Explore Courses</span>
          </Link>

          <Link
            to="/settings"
            className="flex items-center gap-2 rounded-md px-4 py-3.5 text-[#838794] transition-colors hover:bg-[#222328]"
          >
            <svg
              className="h-[18px] w-[18px]"
              viewBox="0 0 18 18"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                opacity="0.4"
                d="M1.5 9.66007V8.34007C1.5 7.56007 2.1375 6.91507 2.925 6.91507C4.2825 6.91507 4.8375 5.95507 4.155 4.77757C3.765 4.10257 3.9975 3.22507 4.68 2.83507L5.9775 2.09257C6.57 1.74007 7.335 1.95007 7.6875 2.54257L7.77 2.68507C8.445 3.86257 9.555 3.86257 10.2375 2.68507L10.32 2.54257C10.6725 1.95007 11.4375 1.74007 12.03 2.09257L13.3275 2.83507C14.01 3.22507 14.2425 4.10257 13.8525 4.77757C13.17 5.95507 13.725 6.91507 15.0825 6.91507C15.8625 6.91507 16.5075 7.55257 16.5075 8.34007V9.66007C16.5075 10.4401 15.87 11.0851 15.0825 11.0851C13.725 11.0851 13.17 12.0451 13.8525 13.2226C14.2425 13.9051 14.01 14.7751 13.3275 15.1651L12.03 15.9076C11.4375 16.2601 10.6725 16.0501 10.32 15.4576L10.2375 15.3151C9.5625 14.1376 8.4525 14.1376 7.77 15.3151L7.6875 15.4576C7.335 16.0501 6.57 16.2601 5.9775 15.9076L4.68 15.1651C3.9975 14.7751 3.765 13.8976 4.155 13.2226C4.8375 12.0451 4.2825 11.0851 2.925 11.0851C2.1375 11.0851 1.5 10.4401 1.5 9.66007Z"
                fill="currentColor"
              />
              <path
                d="M9 11.4375C10.3462 11.4375 11.4375 10.3462 11.4375 9C11.4375 7.65381 10.3462 6.5625 9 6.5625C7.65381 6.5625 6.5625 7.65381 6.5625 9C6.5625 10.3462 7.65381 11.4375 9 11.4375Z"
                fill="currentColor"
              />
            </svg>
            <span className="text-base">Settings</span>
          </Link>
        </nav>
      </aside>

      <div className="flex-1 flex flex-col overflow-hidden">
        <header className="flex items-center justify-between border-b border-[#33363E] bg-[#101113] px-4 sm:px-6 py-4">
          <div className="text-[#E7E8E9] text-sm sm:text-base font-bold leading-tight">
            Welcome Back, John
          </div>
          <div className="flex items-center gap-1.5">
            <div className="hidden sm:flex w-14 h-14 items-center justify-center rounded-full bg-[#0AEFC9]">
              <span className="text-black text-2xl">DA</span>
            </div>
            <div className="hidden sm:flex flex-col">
              <span className="text-white text-base">John Doe</span>
              <div className="rounded bg-[#33363E] px-2 py-1">
                <span className="text-[#838794] text-xs">Free Plan</span>
              </div>
            </div>
            <button
              type="button"
              className="lg:hidden rounded-full border border-[#33363E] p-2 text-white transition-colors hover:bg-[#222328]"
              onClick={() => setIsSidebarOpen(true)}
              aria-label="Open sidebar"
            >
              <svg
                className="h-5 w-5"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M4 6H20"
                  stroke="currentColor"
                  strokeWidth="1.5"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
                <path
                  d="M4 12H20"
                  stroke="currentColor"
                  strokeWidth="1.5"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
                <path
                  d="M4 18H20"
                  stroke="currentColor"
                  strokeWidth="1.5"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
              </svg>
            </button>
          </div>
        </header>

        <div className="flex-1 overflow-y-auto px-4 sm:px-6 lg:px-[135px] py-6 sm:py-8 flex items-start justify-center min-h-[100vh]">
  <div className="w-full max-w-[915px] flex flex-col gap-5">
    <div className="text-center px-2 sm:px-0">
      <h1 className="text-white text-[22px] sm:text-[26px] lg:text-[28px] font-bold leading-tight tracking-tight mb-2 break-words">
        Create a Course
      </h1>
      <p className="text-[#6B7280] text-sm sm:text-[15px] leading-6 break-words">
        Create a course tailored to your need
      </p>
    </div>

    <div className="flex flex-col gap-6">
      <div className="flex flex-col gap-2">
        <div className="flex items-center justify-between text-white text-sm sm:text-base leading-none tracking-tight flex-wrap">
          <span>Step {currentStep} of {totalSteps}</span>
          <span>{progressPercentage}% Complete</span>
        </div>
        <div className="h-2 rounded-full bg-[#F1F5F9] overflow-hidden">
          <div
            className="h-full bg-[#7C3BED] transition-all duration-300"
            style={{ width: `${progressPercentage}%` }}
          />
        </div>
      </div>


              <div className="rounded-xl border border-[#696E7E] bg-[#101113] p-4 sm:p-6 shadow-sm mb-16">
  {renderStepContent()}

  {currentStep !== 8 && (
    <div className="flex items-center justify-between mt-7">
      <button
        type="button"
        onClick={handleBack}
        disabled={currentStep === 1}
        className="flex items-center gap-4 px-7 py-4 rounded-lg border border-[#454953] bg-[#33363E] text-white transition-colors hover:bg-[#454953] disabled:opacity-50 disabled:cursor-not-allowed"
      >
        <svg
          width="16"
          height="16"
          viewBox="0 0 16 16"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M8 12.6666L3.33333 7.99992L8 3.33325"
            stroke="white"
            strokeWidth="1.33333"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M12.6667 8H3.33333"
            stroke="white"
            strokeWidth="1.33333"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
        <span className="text-sm font-medium">Back</span>
      </button>

      <button
        type="button"
        onClick={handleNext}
        className="flex items-center gap-4 px-4 py-3 rounded-lg bg-[#7C3BED] text-white shadow-[0_10px_40px_-10px_rgba(124,59,237,0.2)] transition-colors hover:bg-[#6935D1]"
      >
        <span className="text-sm font-medium">Next</span>
        <svg
          width="17"
          height="16"
          viewBox="0 0 17 16"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M3.77808 8H13.1114"
            stroke="white"
            strokeWidth="1.33333"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M8.44482 3.33325L13.1115 7.99992L8.44482 12.6666"
            stroke="white"
            strokeWidth="1.33333"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      </button>
    </div>
  )}
</div>

            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
